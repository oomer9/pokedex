{"version":3,"sources":["styles/globalVariables.ts","components/listNavBar/styles.ts","components/listNavBar/index.tsx","components/pokemonCard/styles.ts","components/pokemonCard/index.tsx","pokeServices/index.ts","pages/home/styles.ts","pages/home/index.tsx","pages/login/styles.ts","pages/login/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["globalVariables","useStyles","makeStyles","navBar","overflow","backgroundColor","justifyContent","display","width","ListNavBar","props","page","totalPages","setPageNumber","classes","setPageSize","pageSize","className","Button","style","color","fontWeight","fontSize","onClick","pokeCard","cursor","boxShadow","PokemonCard","name","pokemonId","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","padding","Card","variant","CardMedia","height","component","image","alt","CardContent","textAlign","textTransform","getPokemon","a","offset","axios","get","pageHeader","WebkitTextStroke","marginBottom","Home","React","useState","pokemonList","setPokemonList","setpage","totalCount","setTotalCount","setIsLoading","useEffect","getPokemonList","pokemon","data","results","length","count","CatchingPokemon","Math","round","flexWrap","map","index","pokemonUrlSplit","url","split","leftBg","background","flexDirection","alignItems","loginHeader","Login","up","email","setEmail","password","setPassword","showPassword","setShowPassword","alignSelf","TextField","value","onChange","e","target","label","type","InputProps","endAdornment","InputAdornment","position","IconButton","Visibility","VisibilityOff","textDecoration","to","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eccf5f30.chunk.js","sourcesContent":["export const globalVariables = {\r\n  red: \"#FF0000\",\r\n  darkRed: \"#CC0000\",\r\n  blue: \"#3B4CCA\",\r\n  yellow: \"#FFDE00\",\r\n  darkYellow: \"#B3A125\",\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\n\r\nexport const useStyles = makeStyles({\r\n  navBar: {\r\n    overflow: \"hidden\",\r\n    backgroundColor: globalVariables.yellow,\r\n    justifyContent: \"space-between\",\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport ArrowCircleRightIcon from \"@mui/icons-material/ArrowCircleRight\";\r\nimport ArrowCircleLeftIcon from \"@mui/icons-material/ArrowCircleLeft\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\ntype Props = {\r\n  page: number;\r\n  totalPages: number;\r\n  setPageNumber: React.Dispatch<React.SetStateAction<number>>;\r\n  setPageSize: React.Dispatch<React.SetStateAction<number>>;\r\n  pageSize: number;\r\n};\r\n\r\nexport function ListNavBar(props: Props) {\r\n  const { page, totalPages, setPageNumber, setPageSize, pageSize } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.navBar}>\r\n      <Button>\r\n        <ArrowCircleLeftIcon style={{ color: globalVariables.blue }} />\r\n      </Button>\r\n      <div style={{ fontWeight: \"bold\", fontSize: \"24px\" }}>{page}/{totalPages}</div>\r\n      <Button\r\n        onClick={() => {\r\n          setPageNumber(page + 1);\r\n        }}\r\n      >\r\n        <ArrowCircleRightIcon style={{ color: globalVariables.blue }} />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\n\r\nexport const useStyles = makeStyles({\r\n  pokeCard: {\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      boxShadow: \"0 8px 16px 0 rgba(0, 0, 0, 0.2)\",\r\n    },\r\n  },\r\n});\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  pokemonId: string;\r\n};\r\n\r\nexport function PokemonCard(props: Props) {\r\n  const { name, pokemonId } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  return (\r\n    <div style={{ width: \"100%\", padding: \"10px\" }}>\r\n      <Card className={classes.pokeCard} variant=\"elevation\">\r\n        <CardMedia\r\n          style={{ height: isMobile ? \"100px\" : \"150px\" }}\r\n          component=\"img\"\r\n          image={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`}\r\n          alt={name}\r\n        />\r\n        <CardContent\r\n          style={{ textAlign: \"center\", textTransform: \"capitalize\" }}\r\n        >\r\n          {name}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nexport type PokemonListResponse = {\r\n  count: number;\r\n  results: PokemonListItem[];\r\n};\r\nexport type PokemonListItem = {\r\n  name: string;\r\n  url: string;\r\n};\r\nexport async function getPokemon(page: number, pageSize: number) {\r\n  //use page size and page number to get offset\r\n  const offset = pageSize * (page - 1);\r\n  return (await axios.get(\r\n    `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${pageSize}`\r\n  )) as AxiosResponse<PokemonListResponse>;\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\n\r\nexport const useStyles = makeStyles({\r\n  pageHeader: {\r\n    color: globalVariables.red,\r\n    WebkitTextStroke: \"1px black\",\r\n    fontSize: \"42px\",\r\n    fontWeight: \"bold\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: \"20px\",\r\n  },\r\n});\r\n","import { useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport { CatchingPokemon } from \"@mui/icons-material\";\r\nimport { color } from \"@mui/system\";\r\nimport React from \"react\";\r\nimport { ListNavBar } from \"../../components/listNavBar\";\r\nimport { PokemonCard } from \"../../components/pokemonCard\";\r\nimport { getPokemon, PokemonListItem } from \"../../pokeServices\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const [pokemonList, setPokemonList] = React.useState<PokemonListItem[]>([]);\r\n  const [pageSize, setPageSize] = React.useState<number>(18);\r\n  const [page, setpage] = React.useState<number>(1);\r\n  const [totalCount, setTotalCount] = React.useState<number>(1);\r\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    getPokemonList();\r\n  }, [page]);\r\n  const getPokemonList = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const pokemon = await getPokemon(page, pageSize);\r\n      if (pokemon?.data?.results?.length) {\r\n        setPokemonList(pokemon.data.results);\r\n        setTotalCount(pokemon.data.count);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.pageHeader}>\r\n        Pok&#233;dex{\" \"}\r\n        <CatchingPokemon\r\n          style={{\r\n            color: globalVariables.red,\r\n            height: \"62px\",\r\n            width: \"62px\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <ListNavBar\r\n          pageSize={pageSize}\r\n          setPageNumber={setpage}\r\n          page={page}\r\n          setPageSize={setPageSize}\r\n          totalPages={Math.round(totalCount / pageSize)}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {pokemonList.map((pokemon: PokemonListItem, index: number) => {\r\n          const pokemonUrlSplit = pokemon.url.split(\"/\");\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: \"flex\",\r\n                width: isMobile ? \"33%\" : \"15%\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <PokemonCard name={pokemon.name} pokemonId={pokemonUrlSplit[6]} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\n\r\nexport const useStyles = makeStyles({\r\n  leftBg: {\r\n    background: globalVariables.yellow,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center \",\r\n  },\r\n  loginHeader: {\r\n    fontSize: \"48px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CatchingPokemon,\r\n  Visibility,\r\n  VisibilityOff,\r\n} from \"@mui/icons-material\";\r\nimport { Button, Card } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { globalVariables } from \"../../styles/globalVariables\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const [email, setEmail] = React.useState<string>(\"\");\r\n  const [password, setPassword] = React.useState<string>(\"\");\r\n  const [showPassword, setShowPassword] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {isMobile ? (\r\n          <div className={classes.leftBg}>\r\n            <CatchingPokemon\r\n              style={{\r\n                color: globalVariables.blue,\r\n                height: \"62px\",\r\n                width: \"62px\",\r\n              }}\r\n            />\r\n            <div className={classes.loginHeader}>Pok&#233;dex</div>\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center \",\r\n          }}\r\n        >\r\n          <Card variant=\"elevation\">\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center \",\r\n                padding: \"20px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  marginBottom: \"15px\",\r\n                  alignSelf: \"start\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"24px\",\r\n                }}\r\n              >\r\n                Log in\r\n              </div>\r\n              <TextField\r\n                style={{ marginBottom: \"10px\", width: \"100%\" }}\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                variant=\"outlined\"\r\n                label=\"Email\"\r\n              />\r\n              <TextField\r\n                style={{ marginBottom: \"20px\", width: \"100%\" }}\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                label=\"Password\"\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={password}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => setShowPassword(!showPassword)}\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Link style={{ textDecoration: \"none\" }} to=\"/\">\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: globalVariables.blue,\r\n                    width: \"100%\",\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home } from \"./pages/home\";\nimport Login from \"./pages/login\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}